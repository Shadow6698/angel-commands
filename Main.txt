-- Script Executor para Roblox com comandos de chat
-- Prefix: ;
-- Comandos básicos + Scripts externos

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local TweenService = game:GetService("TweenService")

local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local playerGui = player:WaitForChild("PlayerGui")

-- Valores padrão
local defaultWalkSpeed = 16
local defaultJumpPower = 50

-- Lista de scripts externos
local externalScripts = {
    ["speedsupreme"] = {
        name = "Speed Supreme",
        url = "https://raw.githubusercontent.com/Shadow6698/Speed-2/main/Main.txt"
    },
    ["coolkid"] = {
        name = "Coolkid Hub",
        url = "https://raw.githubusercontent.com/Shadow6698/COOLKIDHUB/main/Main.txt"
    },
    ["portalgun"] = {
        name = "Portal Gun",
        url = "https://raw.githubusercontent.com/Shadow6698/Portal-gun-/main/Main.txt"
    },
    ["void"] = {
        name = "Void FE",
        url = "https://raw.githubusercontent.com/Shadow6698/Void-fe/main/main.txt"
    },
    ["gravitygun"] = {
        name = "Gravity Gun",
        url = "https://scriptblox.com/raw/Universal-Script-Telekinesis-12332"
    },
    ["angelhub"] = {
        name = "Angel Hub",
        url = "https://raw.githubusercontent.com/Shadow6698/hubmystery/main/Main.txt"
    },
    ["lanterna"] = {
        name = "Lanterna",
        url = "https://raw.githubusercontent.com/lumpiasallad/Flashlight-Script-roblox/refs/heads/main/Flashlight.lua"
    },
    ["cmd1"] = {
        name = "Nameless Admin",
        url = "https://raw.githubusercontent.com/ltseverydayyou/Nameless-Admin/main/Source.lua"
    },
    ["hub1"] = {
        name = "Chaos Hub",
        url = "https://raw.githubusercontent.com/Venom-devX/ChaosHub/main/loader.lua"
    },
    ["emotes"] = {
        name = "Emotes",
        url = "https://pastebin.com/raw/eCpipCTH"
    },
    ["gigante"] = {
        name = "Avatar gigante",
        url = "https://rawscripts.net/raw/Brookhaven-RP-FE-BIG-AVATAR-43381"
    },
    ["bola"] = {
        name = "Virar bola",
        url = "https://rawscripts.net/raw/Universal-Script-Fe-ball-rolL-9835"
    },
    ["bughub"] = {
        name = "Bug Hub",
        url = "https://rawscripts.net/raw/Brookhaven-RP-Glitch-fe-44756"
    },
    ["infinite"] = {
        name = "Pulo infinito",
        url = "https://pastebin.com/raw/zqyDSUWX"
    },
    ["noclip"] = {
        name = "NoClip",
        url = "https://pastebin.com/raw/BK4Q0DfP"
    },
    ["invisible"] = {
        name = "Invisível",
        url = "https://rawscripts.net/raw/Brookhaven-RP-Avatar-invisible-45072"
    }
}

-- Lista de teleportes para localizações
local teleportLocations = {
    ["salao"] = {name = "Salão de festa", cframe = CFrame.new(-76, 4, -123)},
    ["sofa"] = {name = "Sofá da casa", cframe = CFrame.new(-82, 22, -128)},
    ["doceria"] = {name = "Doceria", cframe = CFrame.new(-125, 6, -120)},
    ["jogos"] = {name = "Sala de jogos", cframe = CFrame.new(-172, 1, -126)},
    ["delegacia"] = {name = "Delegacia", cframe = CFrame.new(-121, 4, 31)},
    ["hospital"] = {name = "Hospital", cframe = CFrame.new(-293, 4, 40)},
    ["banco"] = {name = "Banco principal", cframe = CFrame.new(-358, 25, -143)},
    ["bombeiros"] = {name = "Corpo de Bombeiros", cframe = CFrame.new(-469, 6, -122)},
    ["cemiterio"] = {name = "Cemitério", cframe = CFrame.new(-486, 7, 56)},
    ["escola"] = {name = "Escola", cframe = CFrame.new(-315, 6, 211)},
    ["creche"] = {name = "Creche", cframe = CFrame.new(-157, 4, 125)},
    ["caixas"] = {name = "Loja de caixas", cframe = CFrame.new(-162, 4, 268)},
    ["lanches"] = {name = "Lanchonete", cframe = CFrame.new(-169, 20, 291)},
    ["livraria"] = {name = "Livraria", cframe = CFrame.new(-129, 4, 259)},
    ["celulares"] = {name = "Loja de Celulares", cframe = CFrame.new(-127, 21, 253)},
    ["coffes"] = {name = "Cafeteria", cframe = CFrame.new(-96, 5, 250)},
    ["veterinario"] = {name = "Veterinário", cframe = CFrame.new(-100, 22, 262)},
    ["dentista"] = {name = "Dentista", cframe = CFrame.new(-53, 20, 268)},
    ["banco2"] = {name = "Banco Secundário", cframe = CFrame.new(3, 4, 257)},
    ["hotel"] = {name = "Hotel", cframe = CFrame.new(199, 2, 182)},
    ["hamburgueria"] = {name = "Hamburgueria", cframe = CFrame.new(156, 8, 39)},
    ["aeroporto"] = {name = "Aeroporto", cframe = CFrame.new(317, 7, 40)},
    ["shopping"] = {name = "Shopping", cframe = CFrame.new(165, 5, -158)},
    ["ap1"] = {name = "Apartamento 1", cframe = CFrame.new(-35, 20, -126)},
    ["ap2"] = {name = "Apartamento 2", cframe = CFrame.new(-34, 37, -136)},
    ["igreja"] = {name = "Igreja", cframe = CFrame.new(-64, 37, -192)},
    ["praia1"] = {name = "Praia 1", cframe = CFrame.new(70, 8, -1433)},
    ["praia2"] = {name = "Praia 2", cframe = CFrame.new(-218, 1, 760)},
    ["praia3"] = {name = "Praia 3", cframe = CFrame.new(15, 4, 1460)},
    ["abandonada"] = {name = "Casa Abandonada", cframe = CFrame.new(1044, 8, 54)},
    ["maquinas"] = {name = "Sala das Máquinas", cframe = CFrame.new(235, 4, 813)},
    ["iate"] = {name = "Iate", cframe = CFrame.new(-125, 33, 856)},
    ["cabana"] = {name = "Cabana", cframe = CFrame.new(-249, 6, 1078)},
    ["drones"] = {name = "Torres de Drones", cframe = CFrame.new(-680, 252, 762)},
    ["fazenda1"] = {name = "Fazenda 1", cframe = CFrame.new(-851, 6, -57)},
    ["fazenda2"] = {name = "Fazenda 2", cframe = CFrame.new(-863, 6, -375)},
    ["praça"] = {name = "Praça Central", cframe = CFrame.new(-13, 6, -17)},
    ["montanha"] = {name = "Montanha", cframe = CFrame.new(-580, 1, 1026)},
    ["posto"] = {name = "Posto de Gasolina", cframe = CFrame.new(133, 2, -338)},
    ["loja"] = {name = "Loja", cframe = CFrame.new(-39, 2, 255)},
    ["parque"] = {name = "Parque", cframe = CFrame.new(180, 5, -173)}
}

-- Função para criar notificação de comando
local function createCommandNotification(commandText)
    spawn(function()
        -- Remove notificação existente se houver
        local existingNotif = playerGui:FindFirstChild("CommandNotification")
        if existingNotif then
            existingNotif:Destroy()
        end
        
        -- Criar ScreenGui para notificação
        local notifGui = Instance.new("ScreenGui")
        notifGui.Name = "CommandNotification"
        notifGui.Parent = playerGui
        notifGui.ResetOnSpawn = false
        
        -- Frame da notificação
        local notifFrame = Instance.new("Frame")
        notifFrame.Size = UDim2.new(0, 300, 0, 50)
        notifFrame.Position = UDim2.new(0.5, -150, 0, -60) -- Começa fora da tela
        notifFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
        notifFrame.BorderSizePixel = 0
        notifFrame.Parent = notifGui
        
        -- Borda da notificação
        local notifBorder = Instance.new("UIStroke")
        notifBorder.Color = Color3.fromRGB(100, 200, 255)
        notifBorder.Thickness = 2
        notifBorder.Parent = notifFrame
        
        -- Cantos arredondados
        local notifCorner = Instance.new("UICorner")
        notifCorner.CornerRadius = UDim.new(0, 8)
        notifCorner.Parent = notifFrame
        
        -- Texto da notificação
        local notifText = Instance.new("TextLabel")
        notifText.Size = UDim2.new(1, -20, 1, 0)
        notifText.Position = UDim2.new(0, 10, 0, 0)
        notifText.BackgroundTransparency = 1
        notifText.Text = "Comando executado: " .. commandText
        notifText.TextColor3 = Color3.fromRGB(255, 255, 255)
        notifText.TextScaled = true
        notifText.Font = Enum.Font.SourceSansBold
        notifText.Parent = notifFrame
        
        -- Animação de entrada
        local tweenIn = TweenService:Create(notifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
            Position = UDim2.new(0.5, -150, 0, 20)
        })
        tweenIn:Play()
        
        -- Aguardar 2 segundos e fazer animação de saída
        wait(2)
        local tweenOut = TweenService:Create(notifFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Position = UDim2.new(0.5, -150, 0, -60)
        })
        tweenOut:Play()
        
        -- Remover GUI após animação
        tweenOut.Completed:Connect(function()
            notifGui:Destroy()
        end)
    end)
end

-- Função para criar GUI de comandos
local function createCommandsGUI()
    -- Remove GUI existente se houver
    local existingGui = playerGui:FindFirstChild("CommandsGUI")
    if existingGui then
        existingGui:Destroy()
    end
    
    -- Criar ScreenGui
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CommandsGUI"
    screenGui.Parent = playerGui
    screenGui.ResetOnSpawn = false
    
    -- Frame principal
    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 450, 0, 500)
    mainFrame.Position = UDim2.new(0.5, -225, 0.5, -250)
    mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    mainFrame.BorderSizePixel = 0
    mainFrame.Parent = screenGui
    
    -- Borda do frame
    local border = Instance.new("UIStroke")
    border.Color = Color3.fromRGB(60, 60, 60)
    border.Thickness = 2
    border.Parent = mainFrame
    
    -- Cantos arredondados
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 10)
    corner.Parent = mainFrame
    
    -- Título
    local title = Instance.new("TextLabel")
    title.Size = UDim2.new(1, -40, 0, 40)
    title.Position = UDim2.new(0, 20, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = "COMANDOS DISPONÍVEIS"
    title.TextColor3 = Color3.fromRGB(255, 255, 255)
    title.TextScaled = true
    title.Font = Enum.Font.SourceSansBold
    title.Parent = mainFrame
    
    -- Botão X para fechar
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
    closeButton.Text = "X"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Font = Enum.Font.SourceSansBold
    closeButton.Parent = mainFrame
    
    local closeCorner = Instance.new("UICorner")
    closeCorner.CornerRadius = UDim.new(0, 5)
    closeCorner.Parent = closeButton
    
    -- ScrollingFrame para os comandos
    local scrollFrame = Instance.new("ScrollingFrame")
    scrollFrame.Size = UDim2.new(1, -20, 1, -70)
    scrollFrame.Position = UDim2.new(0, 10, 0, 60)
    scrollFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    scrollFrame.BorderSizePixel = 0
    scrollFrame.ScrollBarThickness = 8
    scrollFrame.Parent = mainFrame
    
    local scrollCorner = Instance.new("UICorner")
    scrollCorner.CornerRadius = UDim.new(0, 5)
    scrollCorner.Parent = scrollFrame
    
    -- Layout para os comandos
    local listLayout = Instance.new("UIListLayout")
    listLayout.SortOrder = Enum.SortOrder.LayoutOrder
    listLayout.Padding = UDim.new(0, 5)
    listLayout.Parent = scrollFrame
    
    -- Padding interno
    local padding = Instance.new("UIPadding")
    padding.PaddingLeft = UDim.new(0, 10)
    padding.PaddingRight = UDim.new(0, 10)
    padding.PaddingTop = UDim.new(0, 10)
    padding.PaddingBottom = UDim.new(0, 10)
    padding.Parent = scrollFrame
    
    -- Função para criar label de comando
    local function createCommandLabel(text, isCategory)
        local label = Instance.new("TextLabel")
        label.Size = UDim2.new(1, 0, 0, isCategory and 30 or 25)
        label.BackgroundTransparency = isCategory and 0 or 1
        label.BackgroundColor3 = isCategory and Color3.fromRGB(50, 50, 50) or Color3.fromRGB(40, 40, 40)
        label.Text = text
        label.TextColor3 = isCategory and Color3.fromRGB(100, 200, 255) or Color3.fromRGB(200, 200, 200)
        label.TextScaled = true
        label.Font = isCategory and Enum.Font.SourceSansBold or Enum.Font.SourceSans
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = scrollFrame
        
        if isCategory then
            local categoryCorner = Instance.new("UICorner")
            categoryCorner.CornerRadius = UDim.new(0, 3)
            categoryCorner.Parent = label
        end
        
        return label
    end
    
    -- Adicionar comandos básicos
    createCommandLabel("COMANDOS BÁSICOS", true)
    createCommandLabel(";speed [número] - Define velocidade", false)
    createCommandLabel(";jumppower [número] - Define poder de pulo", false)
    createCommandLabel(";resetjp - Reseta poder de pulo", false)
    createCommandLabel(";resetspeed - Reseta velocidade", false)
    createCommandLabel(";tp [nome] - Teleporta para jogador", false)
    createCommandLabel(";tp random - Teleporta para jogador aleatório", false)
    createCommandLabel(";help - Mostra comandos no chat", false)
    createCommandLabel(";cmds - Abre esta GUI", false)
    
    -- Espaço
    local spacer1 = Instance.new("Frame")
    spacer1.Size = UDim2.new(1, 0, 0, 10)
    spacer1.BackgroundTransparency = 1
    spacer1.Parent = scrollFrame
    
    -- Adicionar teleportes para localizações
    createCommandLabel("TELEPORTES PARA LOCALIZAÇÕES", true)
    for cmdName, locationInfo in pairs(teleportLocations) do
        createCommandLabel(";" .. cmdName .. " - " .. locationInfo.name, false)
    end
    
    -- Espaço
    local spacer2 = Instance.new("Frame")
    spacer2.Size = UDim2.new(1, 0, 0, 10)
    spacer2.BackgroundTransparency = 1
    spacer2.Parent = scrollFrame
    
    -- Adicionar scripts externos
    createCommandLabel("SCRIPTS EXTERNOS", true)
    for cmdName, scriptInfo in pairs(externalScripts) do
        createCommandLabel(";" .. cmdName .. " - " .. scriptInfo.name, false)
    end
    
    -- Ajustar tamanho do scroll
    scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 20)
    
    -- Conectar botão de fechar
    closeButton.MouseButton1Click:Connect(function()
        screenGui:Destroy()
    end)
    
    -- Animação de entrada
    mainFrame.Size = UDim2.new(0, 0, 0, 0)
    local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
        Size = UDim2.new(0, 450, 0, 500)
    })
    tween:Play()
    
    -- Atualizar canvas size quando o layout mudar
    listLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
        scrollFrame.CanvasSize = UDim2.new(0, 0, 0, listLayout.AbsoluteContentSize.Y + 20)
    end)
end
local function executeExternalScript(url, name)
    local success, result = pcall(function()
        local script = game:HttpGet(url)
        local func = loadstring(script)
        if func then
            func()
            print("Script executado com sucesso: " .. name)
        else
            print("Erro ao carregar o script: " .. name)
        end
    end)
    
    if not success then
        print("Erro ao executar " .. name .. ": " .. tostring(result))
    end
end

-- Função para encontrar jogador por nome parcial
local function findPlayer(name)
    name = name:lower()
    for _, p in pairs(Players:GetPlayers()) do
        if p.Name:lower():find(name) or p.DisplayName:lower():find(name) then
            return p
        end
    end
    return nil
end

-- Função para processar comandos
local function processCommand(message)
    local prefix = ";"
    
    -- Verifica se a mensagem começa com o prefixo
    if not message:sub(1, 1) == prefix then
        return
    end
    
    -- Remove o prefixo
    local command = message:sub(2)
    local args = {}
    
    -- Separa comando e argumentos
    for word in command:gmatch("%S+") do
        table.insert(args, word)
    end
    
    local cmd = args[1]:lower()
    
    -- Verifica se é um script externo
    if externalScripts[cmd] then
        local scriptInfo = externalScripts[cmd]
        print("Executando: " .. scriptInfo.name)
        executeExternalScript(scriptInfo.url, scriptInfo.name)
        createCommandNotification(";" .. cmd .. " - " .. scriptInfo.name)
        return
    end
    
    -- Verifica se é um teleporte para localização
    if teleportLocations[cmd] then
        local locationInfo = teleportLocations[cmd]
        if character and character:FindFirstChild("HumanoidRootPart") then
            character.HumanoidRootPart.CFrame = locationInfo.cframe
            print("Teleportado para: " .. locationInfo.name)
            createCommandNotification(";" .. cmd .. " - " .. locationInfo.name)
        end
        return
    end
    
    -- Comandos básicos
    if cmd == "speed" then
        local speed = tonumber(args[2])
        if speed then
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.WalkSpeed = speed
                print("Velocidade definida para: " .. speed)
                createCommandNotification(";speed " .. speed)
            end
        else
            print("Uso: ;speed [número]")
        end
    
    elseif cmd == "jumppower" then
        local jumpPower = tonumber(args[2])
        if jumpPower then
            if character and character:FindFirstChild("Humanoid") then
                character.Humanoid.JumpPower = jumpPower
                print("Poder de pulo definido para: " .. jumpPower)
                createCommandNotification(";jumppower " .. jumpPower)
            end
        else
            print("Uso: ;jumppower [número]")
        end
    
    elseif cmd == "resetjp" then
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.JumpPower = defaultJumpPower
            print("Poder de pulo resetado para: " .. defaultJumpPower)
            createCommandNotification(";resetjp")
        end
    
    elseif cmd == "resetspeed" then
        if character and character:FindFirstChild("Humanoid") then
            character.Humanoid.WalkSpeed = defaultWalkSpeed
            print("Velocidade resetada para: " .. defaultWalkSpeed)
            createCommandNotification(";resetspeed")
        end
    
    elseif cmd == "tp" then
        local targetName = args[2]
        if targetName then
            -- Verifica se é "random" para teleporte aleatório
            if targetName:lower() == "random" then
                local allPlayers = Players:GetPlayers()
                local otherPlayers = {}
                
                -- Remove o próprio jogador da lista
                for _, p in pairs(allPlayers) do
                    if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
                        table.insert(otherPlayers, p)
                    end
                end
                
                if #otherPlayers > 0 then
                    local randomPlayer = otherPlayers[math.random(1, #otherPlayers)]
                    if character and character:FindFirstChild("HumanoidRootPart") then
                        character.HumanoidRootPart.CFrame = randomPlayer.Character.HumanoidRootPart.CFrame
                        print("Teleportado aleatoriamente para: " .. randomPlayer.Name)
                        createCommandNotification(";tp random -> " .. randomPlayer.Name)
                    end
                else
                    print("Nenhum jogador disponível para teleporte aleatório")
                end
                return
            end
            
            -- Teleporte para jogador específico
            local targetPlayer = findPlayer(targetName)
            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                if character and character:FindFirstChild("HumanoidRootPart") then
                    character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
                    print("Teleportado para: " .. targetPlayer.Name)
                    createCommandNotification(";tp " .. targetPlayer.Name)
                end
            else
                print("Jogador não encontrado: " .. targetName)
            end
        else
            print("Uso: ;tp [nome do jogador] ou ;tp random")
        end
    
    elseif cmd == "cmds" then
        createCommandsGUI()
        createCommandNotification(";cmds - GUI aberta")
        
    elseif cmd == "help" or cmd == "ajuda" then
        print("=== COMANDOS DISPONÍVEIS ===")
        print("Comandos básicos:")
        print(";speed [número] - Define velocidade")
        print(";jumppower [número] - Define poder de pulo")
        print(";resetjp - Reseta poder de pulo")
        print(";resetspeed - Reseta velocidade")
        print(";tp [nome] - Teleporta para jogador")
        print(";tp random - Teleporta para jogador aleatório")
        print(";cmds - Abre GUI com comandos")
        print("")
        print("Scripts externos:")
        for cmdName, scriptInfo in pairs(externalScripts) do
            print(";" .. cmdName .. " - " .. scriptInfo.name)
        end
        print("")
        print("Teleportes para localizações:")
        for cmdName, locationInfo in pairs(teleportLocations) do
            print(";" .. cmdName .. " - " .. locationInfo.name)
        end
    
    else
        print("Comando não reconhecido: " .. cmd)
        print("Digite ;help para ver comandos no chat ou ;cmds para abrir a GUI")
    end
end

-- Função para capturar mensagens do chat
local function onChatted(message)
    processCommand(message)
end

-- Conecta o evento de chat
player.Chatted:Connect(onChatted)

-- Atualiza referências do personagem quando respawna
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    humanoid = character:WaitForChild("Humanoid")
end)

print("Script executor carregado!")
print("Digite ;help para comandos no chat ou ;cmds para abrir a GUI")
print("Total de scripts externos: " .. tostring(#externalScripts))
print("Total de teleportes: " .. tostring(#teleportLocations))

-- Abrir GUI automaticamente quando o script for executado
wait(1) -- Aguarda um segundo para garantir que tudo carregou
createCommandsGUI()
